---
name: "Test"
on:
  pull_request:
  push:
    branches:
      - "qa/**"
      - "stable/**"
      - "dev/amauat-coverage-report-take2"
jobs:
  test:
    name: "Test ${{ matrix.rule }} on ${{ matrix.python-version }}"
    runs-on: "ubuntu-22.04"
    strategy:
      fail-fast: false
      matrix:
        rule: [
          "mcp-server",
          "mcp-client",
          "dashboard",
          "archivematica-common",
        ]
        ubuntu-version: [
          "22.04",
        ]
        python-version: [
          "3.8",
          "3.9",
          "3.10",
          "3.11",
          "3.12"
        ]
        include:
          - rule: "storage-service"
            ubuntu-version: "22.04"
            python-version: "3.9"
          - rule: "migrations"
            ubuntu-version: "22.04"
            python-version: "3.9"
    steps:
      - name: "Check out repository"
        uses: "actions/checkout@v4"
      - name: "Check out the archivematica-storage-service submodule"
        run: |
          git submodule update --init hack/submodules/archivematica-storage-service/
      - name: "Save user id"
        id: user_id
        run: |
          echo "user_id=$(id -u)" >> $GITHUB_OUTPUT
      - name: "Save group id"
        id: group_id
        run: |
          echo "group_id=$(id -g)" >> $GITHUB_OUTPUT
      - name: "Set up buildx"
        uses: "docker/setup-buildx-action@v3"
      - name: "Build archivematica-tests image"
        uses: "docker/build-push-action@v5"
        with:
          context: .
          file: ./hack/Dockerfile
          target: archivematica-tests
          build-args: |
            USER_ID=${{ steps.user_id.outputs.user_id }}
            GROUP_ID=${{ steps.group_id.outputs.group_id }}
            UBUNTU_VERSION=${{ matrix.ubuntu-version }}
            PYTHON_VERSION=${{ matrix.python-version }}
          tags: archivematica-tests:latest
          push: false
          load: true
          cache-from: "type=gha,scope=archivematica-tests-${{ matrix.ubuntu-version }}-${{ matrix.python-version }}-${{ matrix.rule }}"
          cache-to: "type=gha,scope=archivematica-tests-${{ matrix.ubuntu-version }}-${{ matrix.python-version }}-${{ matrix.rule }},mode=max"
      - name: "Create external volumes"
        run: |
          make -C hack/ create-volumes
      - name: "Run make rule"
        run: |
          docker buildx install
          make -C hack/ test-${{ matrix.rule }}
        env:
          TOXARGS: -vv
          PYTEST_ADDOPTS: -vv --cov /src/src/ --cov-config=/src/.coveragerc --cov-report xml:/src/coverage.xml
          PYTHON_VERSION: ${{ matrix.python-version }}
      - name: "Upload coverage report"
        if: matrix.rule != 'storage-service' && matrix.rule != 'migrations' && github.repository == 'artefactual/archivematica'
        uses: "codecov/codecov-action@v4"
        with:
          files: ./coverage.xml
          fail_ci_if_error: false
          verbose: true
          flags: "unittests,${{ matrix.rule }}"
          name: ${{ matrix.rule }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
